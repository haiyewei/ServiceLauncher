name: servicelauncher
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.1+1

flutter_launcher_icons:
  # 关闭 Android 和 iOS 的图标生成
  android: false
  ios: false
  # 如果 ios: false, remove_alpha_ios: true 这行就没有意义了，可以移除
  # remove_alpha_ios: true

  # 全局默认的图标源文件路径，除非平台单独指定
  image_path: "assets/icons/app_icon.png"

  # Windows 图标配置
  windows:
    generate: true
    # image_path: "assets/icons/app_icon.png" # 如果与全局 image_path 相同，可以省略此行
    icon_size: 256 # Windows 图标大小 (通常需要一个较大的尺寸，这里使用 256)
    # icon_path: "assets/icons/app_icon.ico" # 如果有现成的 .ico 文件，可以指定 ico_path 代替 image_path

  # Web 图标配置 (通常用于 Favicon)
  web:
    generate: true
    # image_path: "assets/icons/app_icon.png" # 如果与全局 image_path 相同，可以省略此行
    favicon_path: "assets/icons/app_icon.png" # Favicon 通常也使用同一个源文件，如果与 image_path 相同，可以省略，但明确指定更清晰

  # macOS 图标配置
  macos:
    generate: true
    # image_path: "assets/icons/app_icon.png" # 如果与全局 image_path 相同，可以省略此行
    # icns_path: "assets/icons/app_icon.icns" # 如果你有现成的 .icns 文件，可以指定 icns_path 代替 image_path

  # 新增 Linux 图标配置
  linux:
    generate: true
    # image_path: "assets/icons/app_icon.png" # 如果与全局 image_path 相同，可以省略此行
    # 可以为 Linux 指定一个 .png 源文件，或者如果你有 Linux 特定的图标文件格式（如 .svg 或其他），可以查阅 flutter_launcher_icons 文档看是否支持或有特定选项。通常提供一个高分辨率 PNG 就足够让工具生成 Linux 需要的各种尺寸的 PNG 图标文件。
    # 例如，一些 Linux 配置可能需要的额外选项：
    # main_dart_file: "lib/main.dart" # 可选：指定主 Dart 文件
    # icon_size: 256 # Linux 图标大小（可选，默认会生成多种尺寸）
environment:
  sdk: ^3.7.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  window_manager: ^0.3.8
  flutter_platform_widgets: ^6.1.0
  dynamic_color: ^1.6.8
  shared_preferences: ^2.2.2
  provider: ^6.1.1
  path_provider: ^2.1.1
  path: ^1.8.3
  google_fonts: ^5.1.0
  betrayal: ^1.3.7
  logging: ^1.3.0
  contextual_menu: ^0.1.2
  file_picker: ^6.1.1
  uuid: ^4.5.1
  reorderable_grid_view: ^2.2.8 # 添加用于拖拽排序的库 (使用建议版本)
  launch_at_startup: ^0.5.1
  collection: ^1.19.1
  intl: ^0.19.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

  flutter_launcher_icons: ^0.13.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - lib/themes/colors.json
    - assets/icons/app_icon.ico
    - assets/icons/app_icon.png

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package

  # 字体配置
  fonts:
    - family: Roboto
      fonts:
        - asset: assets/fonts/Roboto-VariableFont_wdth,wght.ttf
          style: normal
          weight: 400
    - family: NotoSansSC
      fonts:
        - asset: assets/fonts/NotoSansSC-VariableFont_wght.ttf
          style: normal
          weight: 400
